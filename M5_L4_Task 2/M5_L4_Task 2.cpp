//Домашнее задание к занятию «Динамический массив. Списки. Деки»

/*Задача 2. Добавление в изменяемый динамический массив
В этом задании вам нужно реализовать функцию добавления нового элемента в конец динамического массива целых чисел append_to_dynamic_array.

Добавление элемента будет происходить по алгоритму: если логический размер массива меньше фактического, то вы добавляете новый элемент в запас вашего массива и увеличиваете его логический размер на 1.

Если логический размер массива равен его фактическому размеру, тогда создаётся новый массив размером в 2 раза больше. В него перекладываются элементы из старого массива вместе с новым элементом в конце. Фактический и логический размеры массива изменяют своё значение. Логический размер увеличивается на единицу, фактический размер увеличивается в два раза, старый массив уничтожается. Далее программа должна работать уже с новым массивом.

Организуйте интерактивное взаимодействие с пользователем. Ваша программа будет работать по алгоритму:

Пользователь вводит фактический размер массива.
Пользователь вводит логический размер массива.
Пользователь вводит элементы для заполнения массива. Их количество будет равно логическому размеру массива.
Программа выводит введённый массив на консоль с помощью функции print_dynamic_array из прошлого задания.
Пользователь вводит новый элемент для добавления в конец. Ввод элементов заканчивается, если пользователь введёт специальное значение (например, 0).
Программа выводит массив с добавленным элементом.
Пункты 5 и 6 повторяются до тех пор, пока пользователь не введёт специальное значение (например, 0).
Программа прощается, выводит окончательное состояние динамического массива и завершает свою работу.
Подумайте над тем, какая сигнатура будет у вашей функции и как вы будете хранить фактический и логический размеры вашего массива..*/

#include <iostream>

void print_dynamic_array(int* arr, int logical_size, int actual_size)
{
	for (int i = 0; i < actual_size; ++i)
	{
		if (i < logical_size)
		{
			std::cout << arr[i] << " ";
		}
		else
		{
			std::cout << "_" << " ";
		}
	}
	std::cout << std::endl;
}

void append_to_dynamic_array(int*& arr, int& logical_size, int& actual_size, int new_element)
{
	// Если логический размер меньше фактического, добавляем в запас
	if (logical_size < actual_size)
	{
		arr[logical_size++] = new_element;
	}
	else 
	{
		// Создаем новый массив в два раза больше
		int* new_arr = new int[actual_size * 2];

		// Копируем элементы из старого массива
		for (int i = 0; i < logical_size; ++i)
		{
			new_arr[i] = arr[i];
		}

		// Добавляем новый элемент	
		new_arr[logical_size++] = new_element;

		// Увеличиваем фактический размер
		actual_size *= 2;

		// Удаляем старый массив
		delete[] arr;

		// Переназначаем указатель на новый массив
		arr = new_arr;
	}
}


int main()
{
	setlocale(LC_ALL, "ru");

	int* arr;
	int logical_size = 0;
	int actual_size = 0;

	std::cout << "Введите фактический размер массива: ";
	std::cin >> actual_size;

	arr = new int[actual_size];

	std::cout << "Введите логический размер массива: ";
	std::cin >> logical_size;

	if (logical_size > actual_size)
	{
		std::cout << "Ошибка! Логический размер массива превышает фактический ";
	}
	else
	{
		for (int i = 0; i < logical_size; ++i)
		{
			std::cout << "Введите элемент " << i + 1 << ": ";
			std::cin >> arr[i];
		}
		print_dynamic_array(arr, logical_size, actual_size);

		// Добавление элементов
		int new_element;
		while (true)
		{
			std::cout << "Введите новый элемент (0 - завершить): ";
			std::cin >> new_element;

			if (new_element == 0)
			{
				break;
			}
			else
			{
				append_to_dynamic_array(arr, logical_size, actual_size, new_element);

				// Вывод массива
				print_dynamic_array(arr, logical_size, actual_size);
			}
		}
	}

	// Очистка памяти
	delete[] arr;

	return 0;
}

